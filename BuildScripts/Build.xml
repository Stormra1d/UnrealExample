<BuildGraph xmlns="http://www.epicgames.com/BuildGraph" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.epicgames.com/BuildGraph ../Schema.xsd">
  
  <!-- Configuration -->
  <Option Name="ProjectName" Required="true" Description="Name of the project" />
  <Option Name="ProjectRoot" Required="true" Description="Root directory of the project" />

  <Property Name="ProjectFile" Value="$(ProjectRoot)/$(ProjectName).uproject" />
  <Property Name="BuildOutputDir" Value="$(ProjectRoot)/Saved/StagedBuilds" />

  <Error Message="Project file $(ProjectFile) does not exist" If="!Exists('$(ProjectFile)')" />

  <!-- Build Configuration -->
  <Option Name="BuildConfiguration" DefaultValue="Development" Restrict="Debug|Development|Shipping|Test" Description="Build configuration" />
  <Option Name="TargetPlatform" DefaultValue="Win64" Restrict="Win64|Linux|Mac" Description="Target platform for builds" />

  <Option Name="EnableEditor" DefaultValue="true" Restrict="true|false" Description="Build the editor" />
  <Option Name="EnableGameBuild" DefaultValue="true" Restrict="true|false" Description="Build the game target" />
  <Option Name="EnableCook" DefaultValue="true" Restrict="true|false" Description="Cook content for the target platform" />
  <Option Name="EnablePackage" DefaultValue="true" Restrict="true|false" Description="Package the game" />
  <Option Name="EnableTests" DefaultValue="true" Restrict="true|false" Description="Run automated tests" />
  <Option Name="EnableLinting" DefaultValue="true" Restrict="true|false" Description="Run code analysis and linting" />

  <Option Name="AutomationTests" DefaultValue="Group:System" Description="Automation tests to run (semicolon separated)" />
  <Option Name="TestTimeout" DefaultValue="600" Description="Test timeout in seconds TODO" />

  <Agent Name="Build Agent" Type="Win64">

    <!-- Build Editor -->
    <Node Name="BuildEditor" Requires="GenerateProjectFiles" Produces="#EditorBinaries">
      <Log Message="Building $(ProjectName) Editor..." />
      <Compile Target="$(ProjectName)Editor" 
               Platform="Win64"
               Configuration="$(BuildConfiguration)" 
               Project="$(ProjectFile)"
               Tag="#EditorBinaries" />
      <Log Message="Editor build complete" />
    </Node>

    <!-- Build Game Target -->
    <Node Name="BuildGame" Requires="GenerateProjectFiles" Produces="#GameBinaries">
      <Log Message="Building $(ProjectName) game target..." />
      <Compile Target="$(ProjectName)" 
               Platform="$(TargetPlatform)"
               Configuration="$(BuildConfiguration)" 
               Project="$(ProjectFile)"
               Tag="#GameBinaries" />
      <Log Message="Game build complete" />
    </Node>

    <!-- Cook Content -->
    <Node Name="CookContent" Requires="BuildEditor" Produces="#CookedContent" RunEarly="true">
      <Log Message="Cooking content for $(TargetPlatform)..." />
      <Cook Project="$(ProjectFile)" Platform="$(TargetPlatform)" />
      <Tag Files="$(ProjectRoot)/Saved/Cooked/..." With="#CookedContent" />
    </Node>

    <!-- Stage and Package -->
    <Node Name="StageProject" Requires="BuildGame;#GameBinaries;#CookedContent">
      <Log Message="Staging project for $(TargetPlatform)..." />
      <Command Name="BuildCookRun" Arguments="-Project=&quot;$(ProjectFile)&quot; -Platform=$(TargetPlatform) -Configuration=$(BuildConfiguration) -SkipBuild -SkipCook -Stage -Pak -NoCodeSign" />
    </Node>

    <Node Name="PackageProject" Requires="StageProject">
      <Log Message="Packaging project for $(TargetPlatform)..." />
      <Command Name="BuildCookRun" Arguments="-Project=&quot;$(ProjectFile)&quot; -Platform=$(TargetPlatform) -Configuration=$(BuildConfiguration) -SkipBuild -SkipCook -SkipStage -SkipPak -Package -NoCodeSign" />
    </Node>

  </Agent>

  <Agent Name="Test Agent" Type="Win64">

    <Node Name="RunAutomationTests" Requires="BuildEditor;#EditorBinaries">
      <Log Message="Running automation tests: $(AutomationTests)" />
      <ForEach Name="TestGroup" Values="$(AutomationTests)" Separator=";">
        <Log Message="Running test group: $(TestGroup)" />
        <Command Name="RunUnreal"
                 Arguments="-Project=&quot;$(ProjectFile)&quot; -NullRHI -NoVSync -Unattended -NoPause -Deterministic -ExecCmds=&quot;Automation RunTests $(TestGroup); Quit&quot; -TestExit=&quot;Automation Test Queue Empty&quot; -ReportOutputDir=&quot;$(ProjectRoot)/Saved/Automation&quot;"
                 MaxTime="$(TestTimeout)" />
      </ForEach>

      <Log Message="Automation tests complete" />
    </Node>

    <Node Name="RunGauntletTests" Requires="BuildGame;#GameBinaries">
      <Log Message="Running Gauntlet tests..." />
      <Log Message="PLACEHOLDER" />
    </Node>

    <Node Name="TestBlueprintCompilation" Requires="BuildEditor;#EditorBinaries">
      <Log Message="Testing Blueprint compilation..." />
      <Commandlet Name="CompileAllBlueprints" Project="$(ProjectFile)" />
      <Log Message="Blueprint compilation test complete!" />
    </Node>
  </Agent>

  <Agent Name="Analysis Agent" Type="Win64">

    <Node Name="RunCodeAnalysis" Requires="GenerateProjectFiles">
      <Log Message="Running static code analysis..." />
      
      <Compile Target="$(ProjectName)Editor" 
               Platform="Win64" 
               Configuration="$(BuildConfiguration)" 
               Project="$(ProjectFile)"
               Arguments="-StaticAnalyzer=Default -NoPCH -NoSharedPCH -DisableUnity -NoLink" />
      
      <Log Message="Static code analysis complete!" />
    </Node>

    <Node Name="ValidateAssets" Requires="BuildEditor;#EditorBinaries">
      <Log Message="Validating project assets..." />
      <Commandlet Name="DataValidation" Project="$(ProjectFile)" />
      <Log Message="Asset validation complete!" />
    </Node>
  </Agent>

  <!-- Build-only pipeline -->
  <Property Name="BuildNodes" Value="GenerateProjectFiles" />
  <Property Name="BuildNodes" Value="$(BuildNodes);BuildEditor" If="$(EnableEditor)" />
  <Property Name="BuildNodes" Value="$(BuildNodes);BuildGame" If="$(EnableGameBuild)" />
  
  <!-- Full pipeline with cooking and packaging -->
  <Property Name="PackageNodes" Value="$(BuildNodes)" />
  <Property Name="PackageNodes" Value="$(PackageNodes);CookContent" If="$(EnableCook)" />
  <Property Name="PackageNodes" Value="$(PackageNodes);StageProject;PackageProject" If="$(EnablePackage)" />
  
  <!-- Test pipeline -->
  <Property Name="TestNodes" Value="RunAutomationTests;RunGauntletTests;TestBlueprintCompilation" If="$(EnableTests)" />
  
  <!-- Analysis pipeline -->
  <Property Name="AnalysisNodes" Value="RunCodeAnalysis;ValidateAssets" If="$(EnableLinting)" />
  
  <!-- Full CI/CD pipeline -->
  <Property Name="AllNodes" Value="$(PackageNodes)" />
  <Property Name="AllNodes" Value="$(AllNodes);$(TestNodes)" If="$(EnableTests)" />
  <Property Name="AllNodes" Value="$(AllNodes);$(AnalysisNodes)" If="$(EnableLinting)" />

  <!-- Individual targets -->
  <Aggregate Name="Build" Requires="$(BuildNodes)" />
  <Aggregate Name="Package" Requires="$(PackageNodes)" />
  <Aggregate Name="Test" Requires="$(TestNodes)" />
  <Aggregate Name="Analyze" Requires="$(AnalysisNodes)" />
  
  <!-- Main CI/CD target -->
  <Aggregate Name="CI" Requires="$(AllNodes)" />
  
  <!-- Default target when no specific target is specified -->
  <Aggregate Name="Default" Requires="CI" />
</BuildGraph>