<BuildGraph xmlns="http://www.epicgames.com/BuildGraph" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.epicgames.com/BuildGraph ../Schema.xsd">
  <Option Name="ProjectName" DefaultValue="" Description="Name of the project" />
  <Option Name="ProjectRoot" DefaultValue="" Description="Root directory of the project" />

  <Property Name="ProjectFile" Value="$(ProjectRoot)\$(ProjectName).uproject" />
  <Property Name="BuildOutputDir" Value="$(ProjectRoot)\Saved\StagedBuilds" />
  <Property Name="AutomationOutDir" Value="$(ProjectRoot)\Saved\Automation" />

  <Error Message="Project file $(ProjectFile) does not exist" If="!Exists('$(ProjectFile)')" />
  <Error Message="ProjectName must be specified via -set:ProjectName=..." If="'$(ProjectName)' == ''" />
  <Error Message="ProjectRoot must be specified via -set:ProjectRoot=..." If="'$(ProjectRoot)' == ''" />

  <Option Name="BuildConfiguration" DefaultValue="Development"
          Restrict="Debug|Development|Shipping|Test"
          Description="Build configuration" />
  <Option Name="TargetPlatform" DefaultValue="Win64"
          Restrict="Win64|Linux|Mac"
          Description="Target platform" />
  <Option Name="EnableEditor" DefaultValue="true"
          Restrict="true|false"
          Description="Build the editor" />
  <Option Name="EnableGameBuild" DefaultValue="true"
          Restrict="true|false"
          Description="Build the game target" />
  <Option Name="EnableCook" DefaultValue="true"
          Restrict="true|false"
          Description="Cook content" />
  <Option Name="EnablePackage" DefaultValue="true"
          Restrict="true|false"
          Description="Package the build" />
  <Option Name="EnableTests" DefaultValue="true"
          Restrict="true|false"
          Description="Run automated tests" />
  <Option Name="ForceEngineRebuild" DefaultValue="false"
          Restrict="true|false"
          Description="Force rebuild engine modules" />
  <Option Name="AutomationTests" DefaultValue="Game.FPSCharacter.*"
          Description="Automation test filter pattern" />


  <Agent Name="Build Agent" Type="Win64">
    <Node Name="GenerateProjectFiles">
      <Spawn Exe="$(RootDir)\Engine\Binaries\DotNET\UnrealBuildTool\UnrealBuildTool.exe" Arguments="-ProjectFiles -Project=&quot;$(ProjectFile)&quot; -Game" />
    </Node>

    <Node Name="EnsureEnginePrerequisites" Requires="GenerateProjectFiles" If="$(ForceEngineRebuild)">
      <Compile Target="UnrealEditor" Platform="Win64" Configuration="$(BuildConfiguration)" />
    </Node>

    <Node Name="BuildEditor" Requires="GenerateProjectFiles" Produces="#EditorBinaries" If="$(EnableEditor)">
      <Compile Target="$(ProjectName)Editor" Platform="Win64" Configuration="$(BuildConfiguration)" Arguments="-NoHotReloadFromIDE" Project="$(ProjectFile)" Tag="#EditorBinaries" />
    </Node>

    <Node Name="BuildGame" Requires="GenerateProjectFiles" Produces="#GameBinaries" If="$(EnableGameBuild)">
      <Compile Target="$(ProjectName)" Platform="$(TargetPlatform)" Configuration="$(BuildConfiguration)" Arguments="-NoHotReloadFromIDE" Project="$(ProjectFile)" Tag="#GameBinaries" />
    </Node>

    <Node Name="CookContent" Requires="BuildEditor" Produces="#CookedContent" If="$(EnableCook)">
      <Property Name="CookPlatform" Value="$(TargetPlatform)" />
      <Property Name="CookPlatform" Value="Windows" If="'$(TargetPlatform)' == 'Win64'" />
      <Cook Project="$(ProjectFile)" Platform="$(CookPlatform)" />
      <Tag Files="$(ProjectRoot)\Saved\Cooked\..." With="#CookedContent" />
    </Node>

    <Node Name="StageProject" Requires="BuildGame;CookContent" If="$(EnablePackage)">
      <Command Name="BuildCookRun" Arguments="-Project=&quot;$(ProjectFile)&quot; -Platform=$(TargetPlatform) -Configuration=$(BuildConfiguration) -SkipBuild -SkipCook -Stage -Pak -NoCodeSign" />
      <Tag Files="$(ProjectRoot)\Saved\StagedBuilds\$(TargetPlatform)\..." With="#Staged" />
    </Node>

    <Node Name="PackageProject" Requires="StageProject" If="$(EnablePackage)">
      <Command Name="BuildCookRun" Arguments="-Project=&quot;$(ProjectFile)&quot; -Platform=$(TargetPlatform) -Configuration=$(BuildConfiguration) -SkipBuild -SkipCook -SkipStage -SkipPak -Package -NoCodeSign" />
    </Node>
  </Agent>

  <Agent Name="Test Agent" Type="Win64">
    <Node Name="RunEditorTests" Requires="BuildEditor" If="$(EnableTests)">
      <Command Name="RunUnreal" Arguments="
        -project=&quot;$(ProjectFile)&quot;
        -platform=$(TargetPlatform)
        -configuration=$(BuildConfiguration)
        -test=UE.EditorAutomation
        -runtest=Group:CI_Editor
        -build=editor
        -reportdir=&quot;$(AutomationOutDir)\Editor\Gauntlet&quot;
        -ReportExportPath=&quot;$(AutomationOutDir)\Editor\Automation&quot;
        -reportall
        -reportexporters=xml
        -timeout=18000
        -maxtestduration=18000
        -MaxDuration=18000
        -heartbeatperiod=60
        -unattended -nop4 -nosplash" />
    </Node>

    <Node Name="RunClientTests_Perf" Requires="StageProject" If="$(EnableTests)">
      <Command Name="RunUnreal" Arguments="
        -project=&quot;$(ProjectFile)&quot;
        -platform=$(TargetPlatform)
        -configuration=$(BuildConfiguration)
        -test=UE.TargetAutomation
        -runtest=Group:CI_Client
        -build=local
        -reportdir=&quot;$(AutomationOutDir)\Client\Perf\Gauntlet&quot;
        -ReportExportPath=&quot;$(AutomationOutDir)\Client\Perf\Automation&quot;
        -reportall
        -reportexporters=xml
        -timeout=18000
        -maxtestduration=18000
        -MaxDuration=18000
        -heartbeatperiod=60
        -unattended -nop4 -nosplash" />
    </Node>

    <Node Name="RunEditorTests_Func" Requires="BuildEditor" If="$(EnableTests)">
      <Command Name="RunUnreal" Arguments="
        -project=&quot;$(ProjectFile)&quot;
        -platform=$(TargetPlatform)
        -configuration=$(BuildConfiguration)
        -test=UE.EditorAutomation
        -runtest=Group:Func
        -build=editor
        -reportdir=&quot;$(AutomationOutDir)\Editor\Func\Gauntlet&quot;
        -ReportExportPath=&quot;$(AutomationOutDir)\Editor\Func\Automation&quot;
        -reportall
        -reportexporters=xml
        -timeout=18000
        -maxtestduration=18000
        -MaxDuration=18000
        -heartbeatperiod=60" />
    </Node>

    <Node Name="RunClientTests_AI" Requires="StageProject" If="$(EnableTests)">
      <Command Name="RunUnreal" Arguments="
        -project=&quot;$(ProjectFile)&quot;
        -platform=$(TargetPlatform)
        -configuration=$(BuildConfiguration)
        -clientargs=&quot;-AITest&quot;
        -test=UE.TargetAutomation
        -runtest=Group:AI
        -build=local
        -reportdir=&quot;$(AutomationOutDir)\Client\AI\Gauntlet&quot;
        -ReportExportPath=&quot;$(AutomationOutDir)\Client\AI\Automation&quot;
        -reportall
        -reportexporters=xml
        -timeout=18000
        -maxtestduration=18000
        -MaxDuration=18000
        -heartbeatperiod=60
        -unattended -nop4 -nosplash" />
    </Node>

    <Node Name="RunEditorTests_UI" Requires="BuildEditor" If="$(EnableTests)">
      <Command Name="RunUnreal" Arguments="
        -project=&quot;$(ProjectFile)&quot;
        -platform=$(TargetPlatform)
        -configuration=$(BuildConfiguration)
        -test=UE.EditorAutomation
        -runtest=Group:UI
        -build=editor
        -reportdir=&quot;$(AutomationOutDir)\Editor\UI\Gauntlet&quot;
        -ReportExportPath=&quot;$(AutomationOutDir)\Editor\UI\Automation&quot;
        -reportall
        -reportexporters=xml
        -timeout=18000
        -maxtestduration=18000
        -MaxDuration=18000
        -heartbeatperiod=60
        -unattended -nop4 -nosplash" />
    </Node>

    <Node Name="TestBlueprintCompilation" Requires="BuildEditor" If="$(EnableTests)">
      <Commandlet Name="CompileAllBlueprints" Project="$(ProjectFile)" />
      <Tag Files="$(AutomationOutDir)\..." With="#AutomationReports" If="$(EnableTests)" />
    </Node>

    <Node Name="CollectArtifacts" Requires="RunEditorTests;RunEditorTests_UI;RunEditorTests_Func;RunClientTests_AI;RunClientTests_Perf" If="$(EnableTests)">
      <Spawn Exe="powershell.exe"
            Arguments="-NoProfile -ExecutionPolicy Bypass -File &quot;$(ProjectRoot)\BuildScripts\CollectArtifacts.ps1&quot; -Root &quot;$(ProjectRoot)&quot;" />
    </Node>
  </Agent>

  <Agent Name="Analysis Agent" Type="Win64">
    <Node Name="RunCodeAnalysis" Requires="GenerateProjectFiles">
      <Compile Target="$(ProjectName)Editor" Platform="Win64" Configuration="$(BuildConfiguration)" Project="$(ProjectFile)" Arguments="-StaticAnalyzer=Default -NoPCH -NoSharedPCH -DisableUnity -NoLink -NoHotReloadFromIDE" />
    </Node>

    <Node Name="ValidateAssets" Requires="BuildEditor">
      <Commandlet Name="DataValidation" Arguments="-Project=&quot;$(ProjectFile)&quot; -Unattended" />
    </Node>
  </Agent>

  <Property Name="BuildNodes" Value="GenerateProjectFiles" />
  <Property Name="BuildNodes" Value="$(BuildNodes);BuildEditor" If="$(EnableEditor)" />
  <Property Name="BuildNodes" Value="$(BuildNodes);BuildGame" If="$(EnableGameBuild)" />

  <Property Name="PackageNodes" Value="$(BuildNodes)" />
  <Property Name="PackageNodes" Value="$(PackageNodes);CookContent" If="$(EnableCook)" />
  <Property Name="PackageNodes" Value="$(PackageNodes);StageProject;PackageProject" If="$(EnablePackage)" />

  <Property Name="TestNodes" Value="" />
  <Property Name="TestNodes" Value="$(TestNodes);RunEditorTests;RunEditorTests_UI;RunEditorTests_Func;RunClientTests_AI" If="$(EnableTests)"/>
  <Property Name="TestNodes" Value="$(TestNodes);RunClientTests_Perf" If="$(EnableTests)"/>
  <Property Name="TestNodes" Value="$(TestNodes);CollectArtifacts" If="$(EnableTests)" />
  <Aggregate Name="Test" Requires="$(TestNodes)" If="'$(TestNodes)' != ''" />

  <Property Name="AnalysisNodes" Value="" />
  <Property Name="AnalysisNodes" Value="RunCodeAnalysis;ValidateAssets" />

  <Aggregate Name="Build" Requires="$(BuildNodes)" />
  <Aggregate Name="Package" Requires="$(PackageNodes)" />
  <Aggregate Name="Analyze" Requires="$(AnalysisNodes)" If="'$(AnalysisNodes)' != ''" />

  <Property Name="CINodes" Value="$(PackageNodes)" />
  <Property Name="CINodes" Value="$(CINodes);$(TestNodes)" If="$(EnableTests) And '$(TestNodes)' != ''" />
  <Property Name="CINodes" Value="$(CINodes);$(AnalysisNodes)" If="'$(AnalysisNodes)' != ''" />

  <Aggregate Name="CI" Requires="$(CINodes)" />
  <Aggregate Name="Default" Requires="CI" />
</BuildGraph>
